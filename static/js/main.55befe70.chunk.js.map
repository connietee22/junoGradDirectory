{"version":3,"sources":["firebase.js","StudentDisplay.js","Form.js","DropDown.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","StudentDisplay","props","className","firstName","lastName","cohort","href","website","aria-hidden","github","linkedIn","funFact","Form","id","htmlFor","aria-label","type","name","onChange","handleChange","value","placeholder","validator","message","pattern","title","maxLength","accept","handleImageAsFile","onClick","handleSubmit","DropDown","selectedDropDown","handleSelect","App","event","target","setState","state","preventDefault","allValid","alert","database","ref","push","formComplete","isToggled","document","getElementById","reset","showMessages","handleButton","studentCards","SimpleReactValidator","messages","required","alpha_num","alpha_num_dash","on","response","newState","data","val","key","this","filter","student","map","index","showUnder","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.55befe70.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n// importing the database\nimport 'firebase/database';\nimport 'firebase/storage';\n\n// grad directory app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC4lf_4rgciba2OfkcI2Bzz6aW4SykgYpA\",\n    authDomain: \"juno-grad-directory.firebaseapp.com\",\n    databaseURL: \"https://juno-grad-directory.firebaseio.com\",\n    projectId: \"juno-grad-directory\",\n    storageBucket: \"juno-grad-directory.appspot.com\",\n    messagingSenderId: \"153843151209\",\n    appId: \"1:153843151209:web:885a162587856509cc0df8\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\n\nexport { storage, firebase as default };\n","import React from 'react';\n\nconst StudentDisplay = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<p className='studentName boldLabel'>\n\t\t\t\t\t{props.firstName} {props.lastName}\n\t\t\t\t</p>\n\t\t\t\t<p className='boldLabel'>cohort {props.cohort}</p>\n\n\t\t\t\t<p>\n\t\t\t\t\t<a href={props.website}>\n\t\t\t\t\t\t<i className='fas fa-desktop' aria-hidden='true'></i>\n\t\t\t\t\t\t{props.website}\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\n\t\t\t\t<p>\n\t\t\t\t\t<a href={`https://github.com/${props.github}`}>\n\t\t\t\t\t\t<i className='fab fa-github-square' aria-hidden='true'></i>\n\t\t\t\t\t\t{props.github}\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<a href={`https://www.linkedin.com/in/${props.linkedIn}`}>\n\t\t\t\t\t\t<i className='fab fa-linkedin' aria-hidden='true'></i>\n\t\t\t\t\t\t{props.linkedIn}\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<span className='boldLabel'>About Me: </span>\n\t\t\t\t\t{props.funFact}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default StudentDisplay;\n","import React from 'react';\n\nconst Form = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<form id='mainForm'>\n\t\t\t\t<p className='boldLabel'>Survived Juno College's bootcamp?</p>\n\t\t\t\t<p className='boldLabel'>Add your card to the directory!</p>\n\n\t\t\t\t{/****INPUT - FIRST NAME */}\n\t\t\t\t<label htmlFor='firstName' aria-label='enter first name'></label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='firstName'\n\t\t\t\t\tname='firstName'\n\t\t\t\t\t// function will trigger on change of this element\n\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t// this will always track the changes of the value\n\t\t\t\t\tvalue={props.firstName}\n\t\t\t\t\tplaceholder='first name'\n\t\t\t\t></input>\n\t\t\t\t{/* determines the message to display when inputs are incorrect or missing */}\n\t\t\t\t{props.validator.message('firstName', props.firstName, 'required')}\n\n\t\t\t\t{/****INPUT - LAST NAME */}\n\t\t\t\t<label htmlFor='lastName' aria-label='enter last name'></label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='lastName'\n\t\t\t\t\tname='lastName'\n\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\tvalue={props.lastName}\n\t\t\t\t\tplaceholder='last name'\n\t\t\t\t></input>\n\t\t\t\t{props.validator.message('lastName', props.lastName, 'required')}\n\n\t\t\t\t{/****INPUT - COHORT FIELD */}\n\t\t\t\t<label htmlFor='cohort' aria-label='enter cohort number'></label>\n\t\t\t\t<input\n\t\t\t\t\ttype='number'\n\t\t\t\t\tid='cohort'\n\t\t\t\t\tname='cohort'\n\t\t\t\t\tclassName='standAloneInput'\n\t\t\t\t\tplaceholder='Cohort number'\n\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\tvalue={props.cohort}\n\t\t\t\t></input>\n\t\t\t\t{props.validator.message('cohort', props.cohort, 'required|numeric|min:1,num|max:29,num')}\n\n\t\t\t\t{/****INPUT - WEBSITE FIELD */}\n\t\t\t\t<label htmlFor='website' aria-label='enter website address'></label>\n\t\t\t\t<input\n\t\t\t\t\ttype='url'\n\t\t\t\t\tid='website'\n\t\t\t\t\tname='website'\n\t\t\t\t\tclassName='standAloneInput'\n\t\t\t\t\tplaceholder='website'\n\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\tvalue={props.website}\n\t\t\t\t\tpattern='https?://.+'\n\t\t\t\t\ttitle='Include http://'\n\t\t\t\t></input>\n\t\t\t\t{props.validator.message('website', props.website, 'required|url')}\n\n\t\t\t\t{/****INPUT - GITHUB FIELD */}\n\t\t\t\t<label htmlFor='github' aria-label='enter github username'></label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='github'\n\t\t\t\t\tname='github'\n\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\tvalue={props.github}\n\t\t\t\t\tplaceholder='github username'\n\t\t\t\t></input>\n\t\t\t\t{props.validator.message('github', props.github, 'required|alpha_num_dash')}\n\n\t\t\t\t{/**** INPUT - LINKEDIN */}\n\t\t\t\t<label htmlFor='linkedIn' aria-label='enter linkedin username'></label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='linkedIn'\n\t\t\t\t\tname='linkedIn'\n\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\tvalue={props.linkedIn}\n\t\t\t\t\tplaceholder='linkedIn username'\n\t\t\t\t></input>\n\t\t\t\t{props.validator.message('linkedIn', props.linkedIn, 'required|alpha_num')}\n\n\t\t\t\t{/**** INPUT - FUN FACT */}\n\t\t\t\t<label htmlFor='funFact' aria-label='enter one fun fact about yourself'></label>\n\t\t\t\t<textarea\n\t\t\t\t\tmaxLength='100'\n\t\t\t\t\tid='funFact'\n\t\t\t\t\tname='funFact'\n\t\t\t\t\tclassName='standAloneInput'\n\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\tvalue={props.funFact}\n\t\t\t\t\tplaceholder='One fun fact about yourself'\n\t\t\t\t></textarea>\n\t\t\t\t{props.validator.message('funFact', props.funFact, 'required')}\n\n\t\t\t\t{/***** INPUT - IMAGE UPLOAD */}\n\t\t\t\t<input\n\t\t\t\t\t// allows user to dive into file directory and upload image to the browser\n\t\t\t\t\ttype='file'\n\t\t\t\t\tid='imgUpload'\n\t\t\t\t\taccept='image/png, image/jpeg'\n\t\t\t\t\tname='userImage'\n\t\t\t\t\tonChange={props.handleImageAsFile}\n\t\t\t\t/>\n\n\t\t\t\t{/**** TO SUBMIT FORM */}\n\t\t\t\t<button onClick={props.handleSubmit}>Submit</button>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n\nexport default Form;\n","import React from 'react';\n\n/******DROP-DOWN MENU TO SORT CARDS */\n\nconst DropDown = (props) => {\n\n\t\treturn (\n            <form>\n                <label htmlFor=\"filterCohort\" aria-label=\"select drop-down option to sort student cards\"></label>\n                <select id=\"filterCohort\" value={props.selectedDropDown} onChange={props.handleSelect}>\n                    <option value=\"reset\">Filter by cohort:</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"11\">11</option>\n                    <option value=\"12\">12</option>\n                    <option value=\"13\">13</option>\n                    <option value=\"14\">14</option>\n                    <option value=\"15\">15</option>\n                    <option value=\"16\">16</option>\n                    <option value=\"17\">17</option>\n                    <option value=\"18\">18</option>\n                    <option value=\"19\">19</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"21\">21</option>\n                    <option value=\"22\">22</option>\n                    <option value=\"23\">23</option>\n                    <option value=\"24\">24</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"26\">26</option>\n                    <option value=\"27\">27</option>\n                    <option value=\"28\">28</option>\n                    <option value=\"29\">29</option>\n                    <option value=\"30\">30</option>\n                </select>\n            </form>\n\t\t);\n\t}\n\n\nexport default DropDown;","import React, { Component } from 'react';\nimport './App.css';\nimport firebase from './firebase';\nimport SimpleReactValidator from 'simple-react-validator';\nimport StudentDisplay from './StudentDisplay.js';\nimport Form from './Form.js';\nimport DropDown from './DropDown.js';\nimport ScrollToTop from 'react-scroll-up';\n\nclass App extends Component {\n\t//************CREATING STATE DATA*********************/\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tstudentCards: [],\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t\tcohort: 0,\n\t\t\twebsite: '',\n\t\t\tgithub: '',\n\t\t\tlinkedIn: '',\n\t\t\tfunFact: '',\n\t\t\tselectedDropDown: 'reset',\n\t\t\tisToggled: false,\n\t\t\tformComplete: false,\n\t\t};\n\t\tthis.validator = new SimpleReactValidator({\n\t\t\tmessages: {\n\t\t\t\trequired: \"Aw! Don't leave this field empty!\",\n\t\t\t\talpha_num: 'You sure you typed that right?',\n\t\t\t\talpha_num_dash: \"This doesn't look like a Github name\",\n\t\t\t},\n\t\t});\n\t}\n\n\t//***********UPDATING STATE*************************//\n\tcomponentDidMount() {\n\t\t// call on the database\n\t\tconst dbRef = firebase.database().ref();\n\n\t\t// on any change of the database, push the data into a state array\n\t\tdbRef.on('value', (response) => {\n\t\t\t// creating new array to hold the data\n\t\t\tconst newState = [];\n\t\t\tconst data = response.val();\n\n\t\t\t// on firebase change, push data into newState array\n\t\t\tfor (const key in data) {\n\t\t\t\tnewState.push({\n\t\t\t\t\tkey: key,\n\t\t\t\t\tfirstName: data[key].firstName,\n\t\t\t\t\tlastName: data[key].lastName,\n\t\t\t\t\tcohort: data[key].cohort,\n\t\t\t\t\twebsite: data[key].website,\n\t\t\t\t\tgithub: data[key].github,\n\t\t\t\t\tlinkedIn: data[key].linkedIn,\n\t\t\t\t\tfunFact: data[key].funFact,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// setting the new array of data from firebase into our original state array, which we can manipulate for display\n\t\t\tthis.setState({\n\t\t\t\tstudentCards: newState,\n\t\t\t});\n\t\t});\n\t\t// When the user clicks on the button, scroll to the top of the document\n\t}\n\n\t//********EVENT HANDLER FUNCTION TO UPDATE FORM.JS MULTIPLE INPUTS' STATE VALUES *****************************//\n\thandleChange = (event) => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\t// this code with help from https://www.pluralsight.com\n\t\t\t...this.state,\n\t\t\t[event.target.name]: value,\n\t\t});\n\t};\n\n\t//**********EVENT LISTENER FOR FORM SUBMIT -- compiles all info on form submit and pushes to firebase*********/\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault();\n\n\t\tif (this.validator.allValid()) {\n\t\t\talert('Sweet! Welcome to the directory!');\n\t\t\t// open portal to Firebase\n\t\t\tconst dbRef = firebase.database().ref();\n\n\t\t\t// gather values from all the inputs into an object and\n\t\t\t// push new student object to Firebase\n\t\t\tdbRef.push({\n\t\t\t\tfirstName: this.state.firstName,\n\t\t\t\tlastName: this.state.lastName,\n\t\t\t\tcohort: this.state.cohort,\n\t\t\t\twebsite: this.state.website,\n\t\t\t\tgithub: this.state.github,\n\t\t\t\tlinkedIn: this.state.linkedIn,\n\t\t\t\tfunFact: this.state.funFact,\n\t\t\t});\n\n\t\t\t// resets the form\n\t\t\tthis.setState({\n\t\t\t\tfirstName: '',\n\t\t\t\tlastName: '',\n\t\t\t\tcohort: 0,\n\t\t\t\twebsite: '',\n\t\t\t\tgithub: '',\n\t\t\t\tlinkedIn: '',\n\t\t\t\tfunFact: '',\n\t\t\t\tformComplete: '',\n\t\t\t\tisToggled: '',\n\t\t\t});\n\t\t\tdocument.getElementById('mainForm').reset();\n\t\t} else {\n\t\t\tthis.validator.showMessages();\n\t\t\t// rerender to show messages for the first time\n\t\t\t// you can use the autoForceUpdate option to do this automatically`\n\t\t\t// this.forceUpdate();\n\t\t}\n\t};\n\n\t//**********EVENT HANDLER FOR DROP-DOWN SELECT***************/\n\thandleSelect = (event) => {\n\t\tthis.setState({\n\t\t\tselectedDropDown: event.target.value,\n\t\t});\n\t};\n\n\t//*********EVENT HANDLER FOR BUTTON TO SHOW FORM***********/\n\n\thandleButton = () => {\n\t\tthis.setState({\n\t\t\tisToggled: !this.state.isToggled,\n\t\t\tformComplete: false,\n\t\t});\n\t};\n\n\t//**********RENDERING THE INITIAL PAGE**********************/\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<header className='wrapper'>\n\t\t\t\t\t<h1>\n\t\t\t\t\t\t<span className='junoType'>Juno College</span>Grad Directory\n\t\t\t\t\t</h1>\n\t\t\t\t\t<div className='headerButtons'>\n\t\t\t\t\t\t<button onClick={this.handleButton} href='#main'>\n\t\t\t\t\t\t\tAdd my name!\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<a href='#main'>\n\t\t\t\t\t\t\t<button>Just browse</button>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<section className='wrapper'>\n\t\t\t\t\t<div className='formToFill'>\n\t\t\t\t\t\t{this.state.isToggled && !this.state.formComplete && (\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t\thandleImageAsFile={this.handleImageAsFile}\n\t\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\t\tvalidator={this.validator}\n\t\t\t\t\t\t\t\t// /* // state data used as props in Form */\n\t\t\t\t\t\t\t\tlastName={this.state.lastName}\n\t\t\t\t\t\t\t\tfirstName={this.state.firstName}\n\t\t\t\t\t\t\t\tcohort={this.state.cohort}\n\t\t\t\t\t\t\t\twebsite={this.state.website}\n\t\t\t\t\t\t\t\tgithub={this.state.github}\n\t\t\t\t\t\t\t\tlinkedIn={this.state.linkedIn}\n\t\t\t\t\t\t\t\tfunFact={this.state.funFact}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<main id='main'>\n\t\t\t\t\t{/* Pulling in DropDown component to render the filter dropdown on page */}\n\t\t\t\t\t<DropDown handleSelect={this.handleSelect} selectedDropDown={this.selectedDropDown} />\n\n\t\t\t\t\t<section className='studentProfiles wrapper'>\n\t\t\t\t\t\t<div className='cardsContainer'>\n\t\t\t\t\t\t\t{/* render cards based on filter that match cohort #  */}\n\t\t\t\t\t\t\t{/* map over all the students based on the filter results */}\n\t\t\t\t\t\t\t{this.state.studentCards\n\t\t\t\t\t\t\t\t.filter((student) => {\n\t\t\t\t\t\t\t\t\tif (this.state.selectedDropDown === 'reset') {\n\t\t\t\t\t\t\t\t\t\treturn true; // if no cohort is chosen from the drop-down menu, return all the students\n\t\t\t\t\t\t\t\t\t} else if (student.cohort === this.state.selectedDropDown) {\n\t\t\t\t\t\t\t\t\t\treturn true; // if student cohort property matches the current dropdown, then return everything in this filter\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn false; // if any other possible mistake, return false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.map((student, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<StudentDisplay\n\t\t\t\t\t\t\t\t\t\t\tkey={index} // to differentiate each record in React\n\t\t\t\t\t\t\t\t\t\t\t// this is all the state data to be used as props in the StudentDisplay\n\t\t\t\t\t\t\t\t\t\t\tfirstName={student.firstName}\n\t\t\t\t\t\t\t\t\t\t\tlastName={student.lastName}\n\t\t\t\t\t\t\t\t\t\t\tcohort={student.cohort}\n\t\t\t\t\t\t\t\t\t\t\twebsite={student.website}\n\t\t\t\t\t\t\t\t\t\t\tgithub={student.github}\n\t\t\t\t\t\t\t\t\t\t\tlinkedIn={student.linkedIn}\n\t\t\t\t\t\t\t\t\t\t\tfunFact={student.funFact}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ScrollToTop showUnder={160}>\n\t\t\t\t\t\t\t<span className='scroll'>▲</span>\n\t\t\t\t\t\t</ScrollToTop>\n\t\t\t\t\t</section>\n\t\t\t\t</main>\n\t\t\t\t<footer className='wrapper'>\n\t\t\t\t\t<div className='footerFlex'>\n\t\t\t\t\t\t<p>Created by Connie Tsang at Juno College</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tPhoto by{' '}\n\t\t\t\t\t\t\t<a href='https://unsplash.com/@sibilant?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText'>\n\t\t\t\t\t\t\t\tJosephine Bredehoft\n\t\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\t\ton{' '}\n\t\t\t\t\t\t\t<a href='https://unsplash.com/s/photos/cork-board?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText'>\n\t\t\t\t\t\t\t\tUnsplash\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}